
avs3_src = files([
  'core/blitter/blitter.cpp',
  'core/blitter/memcopy.cpp',
  'core/block/block.cpp',
  'core/block/holder/ownedsplitting.cpp',
  'core/block/holder/ownedstandard.cpp',
  'core/block/holder/splitting.cpp',
  'core/block/holder/standard.cpp',
  'core/block/holder.cpp',
  'core/block/ownedholder.cpp',
  'core/block/recycler.cpp',
  'core/bufferwindow/blender.cpp',
  'core/bufferwindow/copier.cpp',
  'core/bufferwindow/leftturner.cpp',
  'core/bufferwindow/sizechanger.cpp',
  'core/bufferwindow/verticalflipper.cpp',
  'core/cache/cachelogic.cpp',
  'core/colorspace/concrete/interleaved.cpp',
  'core/colorspace/concrete/map.cpp',
  'core/colorspace/concrete/rgb24.cpp',
  'core/colorspace/concrete/rgb32.cpp',
  'core/colorspace/concrete/rgb8.cpp',
  'core/colorspace/concrete/yuy2.cpp',
  'core/colorspace/concrete/yv12.cpp',
  'core/colorspace/concrete/yv24.cpp',
  'core/colorspace/get.cpp',
  'core/environment/base.cpp',
  'core/environment/runtime_environment.cpp',
  'core/memory/holder/splitting.cpp',
  'core/memory/holder/standard.cpp',
  'core/timing/threadclock.cpp',
  'core/videoframe/concrete/base.cpp',
  'core/videoframe/concrete/interleaved.cpp',
  'core/videoframe/concrete/planar/yuv.cpp',
  'core/videoframe/concrete/planar/yuv8.cpp',
  'core/videoframe/concrete/rgb24.cpp',
  'core/videoframe/concrete/rgb32.cpp',
  'core/videoframe/concrete/videoframe.cpp',
  'core/videoframe/concrete/yuy2.cpp',
  'core/videoframe/concrete/yv12.cpp',
  'core/videoframe/concrete/yv24.cpp',
  'core/videoinfo/videoinfo.cpp',
  'export/vfw/avifile.cpp',
  'export/vfw/avifilefactory.cpp',
  'export/vfw/avistream/audio.cpp',
  'export/vfw/avistream/video.cpp',
  'export/vfw/avistream.cpp',
  'export/vfw/avistreaminfo.cpp',
  'export/vfw/bitmapinfoheader.cpp',
  'export/vfw/exporter/base.cpp',
  'export/vfw/exporter/interleaved.cpp',
  'export/vfw/exporter/yv12.cpp',
  'export/vfw/main.cpp',
  'filters/audio/audiodub.cpp',
  'filters/audio/killaudio.cpp',
  'filters/audio/killvideo.cpp',
  'filters/combine/stack/horizontal.cpp',
  'filters/combine/stack/vertical.cpp',
  'filters/combine/stack.cpp',
  'filters/convert/convert.cpp',
  'filters/convert/torgb24/fromrgb32.cpp',
  'filters/convert/torgb24.cpp',
  'filters/convert/torgb32/fromyuy2.cpp',
  'filters/convert/torgb32/fromyv12.cpp',
  'filters/convert/torgb32.cpp',
  'filters/convert/toyuy2/fromyv12.cpp',
  'filters/convert/toyuy2.cpp',
  'filters/convert/toyv12/fromrgb32.cpp',
  'filters/convert/toyv12/fromyuy2.cpp',
  'filters/convert/toyv12.cpp',
  'filters/convert/toyv24/fromrgb32.cpp',
  'filters/convert/toyv24.cpp',
  'filters/edit/splice/aligned.cpp',
  'filters/edit/splice/audioswitch.cpp',
  'filters/edit/splice/noaudio.cpp',
  'filters/edit/splice/novideo.cpp',
  'filters/edit/splice/standard.cpp',
  'filters/edit/splice/unaligned.cpp',
  'filters/edit/splice/videoswitch.cpp',
  'filters/edit/splice.cpp',
  'filters/edit/trim.cpp',
  'filters/fps/assumefps.cpp',
  'filters/levels/coloryuv/analyze.cpp',
  'filters/levels/coloryuv/auto.cpp',
  'filters/levels/coloryuv/chromamap.cpp',
  'filters/levels/coloryuv/lumamap.cpp',
  'filters/levels/coloryuv/standard.cpp',
  'filters/levels/coloryuv/yuy2.cpp',
  'filters/levels/coloryuv/yv12.cpp',
  'filters/levels/coloryuv.cpp',
  'filters/levels/rgbadjust/scale.cpp',
  'filters/levels/rgbadjust.cpp',
  'filters/levels/tweak/yuy2/isse.cpp',
  'filters/levels/tweak/yuy2.cpp',
  'filters/levels/tweak/yv12.cpp',
  'filters/levels/tweak.cpp',
  'filters/resize/filter/filter.cpp',
  'filters/resize/horizontal/rgb24.cpp',
  'filters/resize/horizontal/rgb32.cpp',
  'filters/resize/horizontal/yuy2.cpp',
  'filters/resize/horizontal.cpp',
  'filters/resize/pattern/interleaved2x2.cpp',
  'filters/resize/pattern/interleaved2x4.cpp',
  'filters/resize/pattern/maker.cpp',
  'filters/resize/pattern/simple.cpp',
  'filters/resize/resize.cpp',
  'filters/resize/subrange.cpp',
  'filters/source/audio/acmaudiodecompressor.cpp',
  'filters/source/audio/cbracmaudiodecompressor.cpp',
  'filters/source/audio/rawaudio.cpp',
  'filters/source/audio/trivialaudiodecompressor.cpp',
  'filters/source/audio/vbracmaudiodecompressor.cpp',
  'filters/source/avifile/base.cpp',
  'filters/source/avifile/rawaudio.cpp',
  'filters/source/avifile/rawvideo.cpp',
  'filters/source/avifilesource.cpp',
  'filters/source/colorbars/rgb32framecreator.cpp',
  'filters/source/colorbars.cpp',
  'filters/source/gstreamer/factory.cpp',
  'filters/source/gstreamer/ownedholder.cpp',
  'filters/source/gstreamer/pipeline.cpp',
  'filters/source/gstreamersource.cpp',
  'filters/source/staticimage.cpp',
  'filters/source/video/framemaker.cpp',
  'filters/source/video/icmframedecompressor.cpp',
  'filters/source/voidclip.cpp',
  'filters/transform/flip.cpp',
  'filters/transform/symetry.cpp',
  'filters/transform/turn.cpp',
  'functions/audio.cpp',
  'functions/combine.cpp',
  'functions/convert.cpp',
  'functions/edit.cpp',
  'functions/levels.cpp',
  'functions/script.cpp',
  'functions/source.cpp',
  'gstreamer/bin.cpp',
  'gstreamer/bus.cpp',
  'gstreamer/element.cpp',
  'gstreamer/iterator.cpp',
  'gstreamer/message.cpp',
  'gstreamer/object.cpp',
  'gstreamer/pad.cpp',
  'gstreamer/pipeline.cpp',
  'gstreamer/signalhandler.cpp',
  'gstreamer/structure/audio.cpp',
  'gstreamer/structure/video.cpp',
  'gstreamer/structure.cpp',
  'import/avi/streamheader.cpp',
  'linker/core/function.cpp',
  'linker/core/plugin.cpp',
  'linker/external/native.cpp',
  'linker/external/plugin.cpp',
  'linker/scriptcontext.cpp',
  'parser/action/action.cpp',
  'parser/action/binaryopmapper.cpp',
  'parser/action/check.cpp',
  'parser/action/get.cpp',
  'parser/codecouple.cpp',
  'parser/function/pool.cpp',
  'parser/function/scriptfunction.cpp',
  'parser/function/table.cpp',
  'parser/functor/if.cpp',
  'parser/functor/while.cpp',
  'parser/grammar/expression.cpp',
  'parser/grammar/keywords.cpp',
  'parser/grammar/literal.cpp',
  'parser/grammar/script.cpp',
  'parser/grammar/statement.cpp',
  'parser/grammar/types.cpp',
  'parser/grammar/vartable.cpp',
  'parser/parser.cpp',
  'parser/vmcode.cpp',
  'utility/bytecounter.cpp',
  'vfw/avistream/audio.cpp',
  'vfw/avistream/video.cpp',
  'vfw/hic.cpp',
  'vfw/importer/interleaved.cpp',
  'vfw/importer/yv12.cpp',
  'vfw/waveformatex.cpp'
])

avs3_lib = library('avs', avs3_src,
  cpp_args : [ avs3_args, '-DAVS3_BUILD' ],
  dependencies : [ boost_dep ],
  gnu_symbol_visibility: 'hidden',
  include_directories : config_dir,
  install : true,
  pic : true,
  version : meson.project_version()
)

avs3_dep = declare_dependency(
  include_directories : config_dir,
  link_with : avs3_lib,
  dependencies : [ boost_dep ]
)
